Diff of Changes:

diff --git a/samba-4.5.1/source3/modules/lib_vxfs.c b/samba-4.5.1/source3/modules/lib_vxfs.c
index 0d5ea60..368be49 100644
--- a/samba-4.5.1/source3/modules/lib_vxfs.c
+++ b/samba-4.5.1/source3/modules/lib_vxfs.c
@@ -36,6 +36,9 @@ static int (*vxfs_getxattr_fd_func) (int fd, const char *name, void *value,
 				     size_t *len);
 static int (*vxfs_removexattr_fd_func) (int fd, const char *name);
 static int (*vxfs_listxattr_fd_func) (int fd, void *value, size_t *len);
+static int (*vxfs_setwxattr_fd_func) (int fd);
+static int (*vxfs_clearwxattr_fd_func) (int fd);
+static int (*vxfs_checkwxattr_fd_func) (int fd);
 
 int vxfs_setxattr_fd(int fd, const char *name, const void *value,
 		     size_t len, int flags)
@@ -202,6 +205,112 @@ int vxfs_listxattr_path(const char *path, char *list, size_t size)
 	return ret;
 }
 
+int vxfs_setwxattr_fd(int fd)
+{
+	int ret = 0;
+
+	if (vxfs_setwxattr_fd_func == NULL) {
+		errno = ENOSYS;
+		return -1;
+	}
+	ret = vxfs_setwxattr_fd_func(fd);
+	DEBUG(10, ("vxfs_setwxattr_fd_func: ret = %d\n", ret));
+	if (ret) {
+		errno = ret;
+		ret = -1;
+	}
+
+	return ret;
+}
+
+int vxfs_setwxattr_path(const char *path)
+{
+	int ret, fd = -1;
+
+	fd = open(path, O_WRONLY);
+	if (fd == -1) {
+		DEBUG(10, ("file not opened: vxfs_setwxattr_path for %s, errno:%s\n",
+			   path, strerror(errno)));
+		return -1;
+	}
+
+	ret = vxfs_setwxattr_fd(fd);
+	DEBUG(10, ("vxfs_setwxattr_fd: ret = %d.\n",
+		   ret));
+	close(fd);
+
+	return ret; 
+}
+
+int vxfs_clearwxattr_fd(int fd)
+{
+	int ret;
+	if (vxfs_clearwxattr_fd_func == NULL) {
+		errno = ENOSYS;
+		return -1;
+	}
+	ret = vxfs_clearwxattr_fd_func(fd);
+	DEBUG(10, ("vxfs_clearwxattr_fd_func: ret = %d\n", ret));
+	if (ret) {
+		errno = ret;
+		ret = -1;
+	}
+
+	return ret;
+}
+
+int vxfs_clearwxattr_path(const char *path)
+{
+	int ret, fd = -1;
+
+	fd = open(path, O_WRONLY);
+	if (fd == -1) {
+		DEBUG(10, ("file not opened: vxfs_clearwxattr_path for %s, errno:%s\n",
+			    path, strerror(errno)));
+		return -1;
+	}
+	ret = vxfs_clearwxattr_fd(fd);
+	DEBUG(10, ("vxfs_clearwxattr_fd: ret = %d.\n",
+		    ret));
+	close(fd);
+
+	return ret;
+}
+
+int vxfs_checkwxattr_fd(int fd)
+{
+	int ret;
+
+	if (vxfs_checkwxattr_fd_func == NULL) {
+		errno = ENOSYS;
+		return -1;
+	}
+	ret = vxfs_checkwxattr_fd_func(fd);
+	DEBUG(10, ("vxfs_checkwxattr_fd_func: ret = %d\n", ret));
+	if (ret) {
+		errno = ret;
+		ret = -1;
+	}
+	return ret;
+}
+
+int vxfs_checkwxattr_path(const char *path)
+{
+
+	int ret, fd = -1;
+
+	fd = open(path, O_WRONLY);
+	if (fd == -1) {
+		DEBUG(10, ("file not opened: vxfs_checkwxattr_path for %s, errno:%s\n",
+			    path, strerror(errno)));
+		return -1;
+	}
+	ret = vxfs_checkwxattr_fd(fd);
+	close(fd);
+
+	return ret;
+}
+
 static bool load_lib_vxfs_function(void *lib_handle, void *fn_ptr,
 				   const char *fnc_name)
 {
@@ -240,5 +349,11 @@ void vxfs_init()
 			       "vxfs_nxattr_remove");
 	load_lib_vxfs_function(&lib_handle, &vxfs_listxattr_fd_func,
 			       "vxfs_nxattr_list");
+	load_lib_vxfs_function(&lib_handle, &vxfs_setwxattr_fd_func,
+			       "vxfs_wattr_set");
+	load_lib_vxfs_function(&lib_handle, &vxfs_clearwxattr_fd_func,
+			       "vxfs_wattr_clear");
+	load_lib_vxfs_function(&lib_handle, &vxfs_checkwxattr_fd_func,
+			       "vxfs_wattr_check");
 
 }
diff --git a/samba-4.5.1/source3/modules/vfs_vxfs.c b/samba-4.5.1/source3/modules/vfs_vxfs.c
index feb3d49..807e2d8 100644
--- a/samba-4.5.1/source3/modules/vfs_vxfs.c
+++ b/samba-4.5.1/source3/modules/vfs_vxfs.c
@@ -729,6 +729,99 @@ static int vxfs_fremove_xattr(struct vfs_handle_struct *handle,
 
 }
 
+static NTSTATUS vxfs_set_ea_dos_attributes(struct vfs_handle_struct *handle,
+					   const struct smb_filename *smb_fname,
+					   uint32_t dosmode)
+{
+	NTSTATUS	err;
+	int		ret = 0, attrset = 0;
+
+	DEBUG(10, ("In vxfs_set_ea_dos_attributes.\n"));
+
+	if (!(dosmode & FILE_ATTRIBUTE_READONLY)) {
+		ret = vxfs_checkwxattr_path(smb_fname->base_name);
+		if (ret == -1) {
+			DEBUG(10, ("vxfs_set_ea_dos_attributes: checkwxattr ret:%d.\n",
+				    ret));
+			if ((errno != EOPNOTSUPP) && (errno != ENOENT)) {
+				return map_nt_error_from_unix(errno);
+			}
+		}
+	}
+	if (dosmode & FILE_ATTRIBUTE_READONLY) {
+		ret = vxfs_setwxattr_path(smb_fname->base_name);
+		DEBUG(10, ("vxfs_set_ea_dos_attributes: setwxattr ret:%d.\n", ret));
+		if (ret == -1) {
+			if ((errno != EOPNOTSUPP) && (errno != EINVAL)) {
+				return map_nt_error_from_unix(errno);
+			}
+		} else {
+			attrset = 1;
+		}
+	}
+	err = SMB_VFS_NEXT_SET_DOS_ATTRIBUTES(handle, smb_fname, dosmode);
+	if (!NT_STATUS_IS_OK(err)) {
+		if (attrset) {
+			ret = vxfs_clearwxattr_path(smb_fname->base_name);
+			DEBUG(10, ("vxfs_set_ea_dos_attributes: clearwxattr ret:%d.\n",
+				    ret));
+			if (ret == -1) {
+				if ((errno != ENOENT)) {
+					return map_nt_error_from_unix(errno);
+				}
+			}
+		}
+	}
+
+	return err;
+}
+
+static NTSTATUS vxfs_fset_ea_dos_attributes(struct vfs_handle_struct *handle,
+					    struct files_struct *fsp,
+					    uint32_t dosmode)
+{
+	NTSTATUS	err;
+	int		ret = 0, attrset = 0;
+
+	DEBUG(10, ("In vxfs_fset_ea_dos_attributes.\n"));
+
+	if (!(dosmode & FILE_ATTRIBUTE_READONLY)) {
+		ret = vxfs_checkwxattr_fd(fsp->fh->fd);
+		if (ret == -1) {
+			DEBUG(10, ("vxfs_fset_ea_dos_attributes: checkwxattr ret:%d.\n",
+				    ret));
+			if ((errno != EOPNOTSUPP) && (errno != ENOENT)) {
+				return map_nt_error_from_unix(errno);
+			}
+		}
+	}
+	if (dosmode & FILE_ATTRIBUTE_READONLY) {
+		ret = vxfs_setwxattr_fd(fsp->fh->fd);
+		DEBUG(10, ("vxfs_fset_ea_dos_attributes: setwxattr ret:%d.\n", ret));
+		if (ret == -1) {
+			if ((errno != EOPNOTSUPP) && (errno != EINVAL)) {
+				return map_nt_error_from_unix(errno);
+			}
+		} else {
+			attrset = 1;
+		}
+	}
+	err = SMB_VFS_NEXT_FSET_DOS_ATTRIBUTES(handle, fsp, dosmode);
+	if (!NT_STATUS_IS_OK(err)) {
+		if (attrset) {
+			ret = vxfs_clearwxattr_fd(fsp->fh->fd);
+			DEBUG(10, ("vxfs_fset_ea_dos_attributes: clearwxattr ret:%d.\n",
+				    ret));
+			if (ret == -1) {
+				if (errno != ENOENT) {
+					return map_nt_error_from_unix(errno);
+				}
+			}
+		}
+	}
+	return err;
+}
+
 static size_t vxfs_filter_list(char *list, size_t size)
 {
 	char *str = list;
@@ -816,6 +909,8 @@ static struct vfs_fn_pointers vfs_vxfs_fns = {
 	.sys_acl_set_fd_fn = vxfs_sys_acl_set_fd,
 #endif
 
+	.set_dos_attributes_fn = vxfs_set_ea_dos_attributes,
+	.fset_dos_attributes_fn = vxfs_fset_ea_dos_attributes,
 	.getxattr_fn = vxfs_get_xattr,
 	.fgetxattr_fn = vxfs_fget_xattr,
 	.listxattr_fn = vxfs_listxattr,
diff --git a/samba-4.5.1/source3/modules/vfs_vxfs.h b/samba-4.5.1/source3/modules/vfs_vxfs.h
index 55a4dae..f438bad 100644
--- a/samba-4.5.1/source3/modules/vfs_vxfs.h
+++ b/samba-4.5.1/source3/modules/vfs_vxfs.h
@@ -31,4 +31,13 @@ int vxfs_removexattr_fd(int, const char *);
 int vxfs_listxattr_path(const char *, char *, size_t);
 int vxfs_listxattr_fd(int, char *, size_t);
 
+int vxfs_setwxattr_path(const char *);
+int vxfs_setwxattr_fd(int);
+
+int vxfs_clearwxattr_path(const char *);
+int vxfs_clearwxattr_fd(int);
+
+int vxfs_checkwxattr_path(const char *);
+int vxfs_checkwxattr_fd(int);
+
 void vxfs_init(void);
